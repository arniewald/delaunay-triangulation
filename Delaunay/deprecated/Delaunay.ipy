# -*- coding: utf-8 -*-
"""
Applies the algorithm to the circles dataset from sklearn, removing one dimension.
"""

import matplotlib.pyplot as plt
from time import time

#from classification_functions import sample_to_test, initialize_sample, reshape_labels, delaunayization, movepoints, save_results, generate_filename, classify
from functions.initialization_functions import initialize_sample, reshape_labels
from functions.reading_functions import extract_run_params, read_general_data
from functions.training_functions import delaunayization, movepoints
from functions.classification_functions import sample_to_test, classify
from functions.writing_functions import generate_filename, save_results
from functions.plotting_functions import plot_data, plot_errors, plot_scrollable_data

data_name = 'franco'
it = 2

#Dataset extraction, test sampling and data initialization
data_params, data, labels, dim = read_general_data(data_name)
dim_labels = len(list(set(labels)))-1
run_params = extract_run_params(data_name)
filename = generate_filename(data_name, run_params)
data, labels, test_data, test_labels = sample_to_test(data,labels,run_params)
data, labels, sample, rem, out_hull = initialize_sample(data,labels,dim,run_params)
labels = reshape_labels(data,labels,dim_labels)

tri, _, e, labels[sample,:], err = delaunayization(data,sample,labels,dim,dim_labels,run_params)
start = time()
data, labels, sample, added, tri, e, err_dict, long_data, long_labels, long_tris = movepoints(data,labels,sample,rem,out_hull,dim,dim_labels,run_params,it,filename=filename,test_data=test_data,real=test_labels,save=True,verbose=True)
end = time()
print("Total time: ",end-start)

#plot_scrollable_data(data,labels,sample,rem,dim,dim_labels,it,long_data,long_labels,long_tris,err_dict,run_params)

targets, errors, correct, incorrect = classify(test_data, dim, tri, labels[sample,:], real=test_labels)

save_results(data_name,filename,data,labels,sample,rem,added,test_data,test_labels,correct,incorrect,tri,dim,dim_labels,err_dict)
fig_data = plot_data(data,labels,dim_labels,sample,rem,added,test_data,test_labels,correct,incorrect,tri,dim)
fig_errors = plot_errors(data_name,filename)
plt.show()
