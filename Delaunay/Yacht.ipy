import numpy as np
import math
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D
from time import time

import sklearn
from sklearn.datasets import make_circles, make_classification, make_moons

from functions import *


#Parameters that we set
size = 500
al = 0.5
errw = 0.5
it = 20
rep = 0 #I have not still adapted the refinement to >2 dimensions
lb = -np.inf
ub = np.inf
binary=False
threshold=0.5

data = []
with open('yacht_hydrodynamics.data') as file:
    lines = file.readlines()
    for line in lines:
        raw = line.split()
        if len(raw)!=0:
            raw = [float(d) for d in raw]
            data.append(raw)

dim = len(data[0])-1
n_samples = len(data)
data = np.array(data)
size = math.floor(n_samples/3)
old_data, data, sample, rem, in_hull = initialize_sample(data,size,dim,rep)
print("Iteration\t LSQF error\t Estimated error\t Error variance\t Real error")
tri, sample, rem, adj, bc, y, e, err = delaunayization(data,sample,rem,in_hull,dim,lb,ub,binary,threshold)

start = time()
tri, sample, rem, adj, bc, y, e, err =  movepoints(data,sample,rem,in_hull,dim,it,al,errw,lb,ub,binary,threshold)
end = time()
print("Total time: ",end-start)
print(y)
