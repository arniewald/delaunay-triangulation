# -*- coding: utf-8 -*-
import matplotlib.pyplot as plt

from functions.reading_functions import extract_run_params
from functions.class_functions import premeasurement, fully_train
from functions.plotting_functions import plot_classifier, plot_classifier_scrollable, plot_metrics
from classes.Classifier import *
from classes.Trainer import Trainer
from classes.Measurer import Measurer
from classes.Writer import Writer
from classes.Reader import Reader

#Parameters
data_name = 'circles'
it = 100
save = True
verbose = True
scrollable = False
folder_name = data_name+'_pp'
premeasure = True



#Initialize objects
run_params = extract_run_params(data_name)
TestClassifier = TestClassifier(data_name, run_params)
Trainer = Trainer(TestClassifier,run_params)
Measurer = Measurer()



#Start training
if premeasure:
    premeasurement(TestClassifier, Trainer, Measurer, verbose=verbose)
added, long_data, long_labels, long_tris = fully_train(TestClassifier,Trainer,Measurer,it,save=save,verbose=verbose)

#Save data
Writer = Writer(data_name,TestClassifier.data_params,run_params,folder_name=folder_name)
Writer.write_folder(TestClassifier,Measurer)

#Plot data
if scrollable:
    plot_classifier_scrollable(TestClassifier,it,long_data,long_labels,long_tris,Measurer.metrics,run_params)
Reader = Reader(Writer.folder_name)
Classifier = Reader.read_classifier()
Measurer = Reader.read_measurer()
fig_classifier = plot_classifier(Classifier)
fig_metrics = plot_metrics(Measurer)
plt.show()